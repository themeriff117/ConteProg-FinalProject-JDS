// <auto-generated />
using Final_v1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Final_v1.Migrations
{
    [DbContext(typeof(Finalcontext))]
    [Migration("20211202221810_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Final_v1.Anime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainChara")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Anime");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Genre = "",
                            MainChara = "",
                            Name = ""
                        });
                });

            modelBuilder.Entity("Final_v1.Models.DnD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Background")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Race")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DnD");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Background = "",
                            Class = "",
                            Name = "",
                            Race = ""
                        });
                });

            modelBuilder.Entity("Final_v1.Models.Vinyl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Album")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VinylCollection");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Album = "Blue Banisters",
                            Artist = "Lana Del Rey",
                            Year = 2021
                        },
                        new
                        {
                            Id = 2,
                            Album = "The 1975",
                            Artist = "The 1975",
                            Year = 2013
                        },
                        new
                        {
                            Id = 3,
                            Album = "Fine Line",
                            Artist = "Harry Styles",
                            Year = 2019
                        });
                });

            modelBuilder.Entity("Final_v1.NameDatabase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Name");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bday = "03/17/2000",
                            CP = "Information Tech.",
                            Name = "Samuel",
                            Year = 2021
                        },
                        new
                        {
                            Id = 2,
                            Bday = "07/03/1996",
                            CP = "Information Tech.",
                            Name = "Dora",
                            Year = 2021
                        },
                        new
                        {
                            Id = 3,
                            Bday = "01/17/2000",
                            CP = "Information Tech.",
                            Name = "Julia",
                            Year = 2021
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
